#Multiple Linear Regression

#Data Preprocessing#
#Importing the libraries

import numpy as np #for importing mathematical operations
import matplotlib.pyplot as plt #for importing plots and figures
import pandas as pd #for importing files 

#Importing the dataset
dataset=pd.read_csv('50_Startups.csv')
x = dataset.iloc[:,:-1]
y = dataset.iloc[:,4].values

#Encoding categorical data - independent variables
from sklearn.preprocessing import LabelEncoder,OneHotEncoder
labelencoder_x = LabelEncoder()
x[:,3]=labelencoder_x.fit_transform(x[:,3])
onehotencoder=OneHotEncoder(categorical_features=[3])
onehotencoder.fit(x)
x=onehotencoder.transform(x).toarray()

#Avoiding the dummy variable trap
x=x[:,1:]

#Splitting data into Training Data and Test Data
from sklearn.model_selection import train_test_split 
x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.2,random_state=0)

#Feature_Scalinng
"""from sklearn.preprocessing import StandardScaler
sc_x=StandardScaler()
x_train=sc_x.fit_transform(x_train)
x_test=sc_x.transform(x_test)"""

#Fitting the Multiple Regression model to Training Set
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(x_train,y_train)

#Predicting the test set results
y_pred=regressor.predict(x_test)

#Building the optimal model using backward elimination
import statsmodels.formula.api as sm
import statsmodels.api as sa
x=np.append(arr=np.ones((50,1)).astype(int),values=x,axis=1) 
x_opt=x[:,[0,1,2,3,4,5]]
regressor_OLS= sa.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()
x_opt=x[:,[0,1,3,4,5]]
regressor_OLS= sa.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()
x_opt=x[:,[0,3,4,5]]
regressor_OLS= sa.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()
x_opt=x[:,[0,3,5]]
regressor_OLS= sa.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()
x_opt=x[:,[0,3]]
regressor_OLS= sa.OLS(endog=y,exog=x_opt).fit()
regressor_OLS.summary()




